First steps
===========
2025-02-20

If the Convert_CTAN bundle is installed (see [installation.txt] and [programs.zip]), the individual programmes can be called.

Simple tests
------------
CTANLoad.py
- download authors, topics, packages, licenses; write CTAN.pkl
- not verbose and without statistics
- resulting files: authors.xml, topics.xml, packages.xml, licenses.xml

CTANLOad.py -h
- help, show the options

CTANOut.py -h
- help, show the options

CTANLoadOut.py -h
- help, show the options

Case 1
------
The packages fontenc and fontscale should be downloaded.

CTANLoad.py -t "fontenc|fontscale" -f -v -stat 

- load all CTAN XML files for fontenc|fontscale  [-t]
- load the associated information files (PDF)    [-f]
- verbose output                                 [-v]
- with statistics                                [-stat]

- resulting files: 'fontenc.xml', '...-encguide.pdf', '...-source2e.pdf'
                   'fontscale.xml', '...-fontscale-code.pdf', '...-fontscale.pdf'

Case 2
------
The packages with the keywords "medical" and "biomedical" should be downloaded and formatted as BibLaTeX entries.

CTANLoad.py -k "biomedical|medical" -f -v -stat
CTANOut.py -k "biomedical|medical" -m bib -v -stat

- load all CTAN XML files with these kyewords  [-k]
- load the associated information files (PDF)  [-f]
- verbose output                               [-v]
- with statistics                              [-stat]
- output format is BibLaTeX                    [-m]

- resulting files: 'cpssp.xml', '…-cpssp.pdf'
                   'ecgdraw.xml', '…-ecgdraw.pdf', '…-ecgdraw_ita.pdf'
                   'vancouver.xml, '…-vancouver.pdf'
                   'all.bib'

Case 3
------
All packages with the time stamp "2024" or "2025", which were created by the authors "Voß" or "Mittelbach", should be summarised in a PDF file.

CTANLoad.py -A "Mittelbach|Voß"  -y "2024|2025" -f -v -stat
CTANOut.py -A "Mittelbach|Voß"  -y "2024|2025" -m tex -mt -v -stat
lualatex all.tex
lualatex all.tex
makeindex all.idx -o all.ind
lualatex all.tex

- verbose output                                          [-v]
- with statistics                                         [-stat]
- only packages with year template "2024|2025"            [-y]
- packages with the author name template "Mittelbach|Voß" [-A]
- load the associated information files (PDF)             [-f]
- special topic lists are generated                       [-mt]

- resulting files: 29 XML files
                   27 PDF files
                   all.tex, all.pdf

Case 4
------
The two steps in case 2 should be combined.

CTANLoadOut.py -k "biomedical|medical" -f  -m bib -v -stat

- load all CTAN XML files with these kyewords  [-k]
- load the associated information files (PDF)  [-f]
- verbose output                               [-v]
- with statistics                              [-stat]
- output format is BibLaTeX                    [-m]

- resulting files: 'cpssp.xml', '…-cpssp.pdf'
                   'ecgdraw.xml', '…-ecgdraw.pdf', '…-ecgdraw_ita.pdf'
                   'vancouver.xml, '…-vancouver.pdf'
                   'all.bib'

Case 5
------
All steps in case 3 should be combinded.

CTANLoadOut -A "Mittelbach|Voß"  -y "2024|2025" -f  -m tex -mt -p -v -stat

- verbose output                                          [-v]
- with statistics                                         [-stat]
- only packages with year template "2024|2025"            [-y]
- packages with the author name template "Mittelbach|Voß" [-A]
- load the associated information files (PDF)             [-f]
- special topic lists are generated                       [-mt]
- a PDF file is generated by LuaLaTeX                     [-p]


- resulting files: 29 XML files
                   27 PDF files
                   all.tex, all.pdf
